<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.james.chat.dao.AppUserMapper">
  <resultMap id="BaseResultMap" type="com.james.chat.entity.AppUser">
    <id column="userId" jdbcType="BIGINT" property="userid" />
    <result column="userName" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="signature" jdbcType="VARCHAR" property="signature" />
    <result column="birthday" jdbcType="VARCHAR" property="birthday" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="avatarUrl" jdbcType="VARCHAR" property="avatarUrl" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where userId = #{userid,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.james.chat.entity.AppUser">
    insert into user (userId, userName, `password`,
      sex, signature, birthday,
      email)
    values (#{userid,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{sex,jdbcType=TINYINT}, #{signature,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.james.chat.entity.AppUser">
    update user
    set userName = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      signature = #{signature,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR}
    where userId = #{userid,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select userId, userName, `password`, sex, signature, birthday, email, avartarUrl
    from user
    where userId = #{userid,jdbcType=BIGINT}
  </select>
  <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
    select userId, userName, `password`, sex, signature, birthday, email
    from user
    where userName = #{username,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select userId, userName, `password`, sex, signature, birthday, email
    from user
  </select>
  <select id="searchUsersWithKeyWord" resultMap="BaseResultMap">
    select userId, userName
    from user where userName like CONCAT(CONCAT('%',#{arg0}),'%') limit #{arg1};
  </select>
  <select id="searchUsersWithKeyWordExplicit" resultMap="BaseResultMap">
    select userId, userName, avartarUrl
    from user where userName like CONCAT(CONCAT('%',#{arg0}),'%') and userId not in (select friendid from friends where userid = (select userId from user where username = #{arg2}) union select userid from friends where friendid = (select userId from user where username = #{arg2})) limit #{arg1};
  </select>
</mapper>
